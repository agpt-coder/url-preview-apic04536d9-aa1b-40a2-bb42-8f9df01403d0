// datasource db defines the database connection settings.
// It is configured for PostgreSQL and uses an environment variable for the connection URL.
// The 'extensions' feature enables the use of PostgreSQL-specific data types.
datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
}

// generator db configures Prisma Client settings.
// It is set up to use Prisma Client Python with asyncio interface and specific features.
generator db {
  provider             = "prisma-client-py"
  interface            = "asyncio"
  recursive_type_depth = 5
  previewFeatures      = ["postgresqlExtensions"]
}

model User {
  id        String     @id @default(dbgenerated("gen_random_uuid()"))
  email     String     @unique
  password  String
  role      Role
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  URLs      UserURL[]
  APITokens APIToken[]
}

model APIToken {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  token     String   @unique
  userId    String
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model UserURL {
  id        String   @id @default(dbgenerated("gen_random_uuid()"))
  url       String
  userId    String
  Preview   Preview? @relation(fields: [previewId], references: [id], onDelete: SetNull)
  previewId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Preview {
  id          String    @id @default(dbgenerated("gen_random_uuid()"))
  title       String
  description String
  thumbnail   String?
  content     String?
  keywords    String[]
  metadata    Json
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  UserURLs    UserURL[]
}

enum Role {
  Admin
  User
  PremiumUser
}

